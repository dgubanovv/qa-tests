# $File: //depot/icm/proj/Atlantic/rev1.0/software/Software/Test/AtlanticTestbench/Regression/test0142_sanity_int.txt $
# $Revision: #7 $
# $DateTime: 2016/04/08 08:55:16 $
# $Author: dgubanov $
#
# Test directly enables interrupt status bits and checks interrupt handlers being called

testName=sanity_int
echo [==========] Running 1 tests from 1 test case.
echo [----------] Global test environment set-up.

mvm = True #Interrupt mode MvM or SM
autoclear = False #Autoclear for MSI-X
mac.isr.get availableVectorCount -n int_count
wait_count = 5
wait_timeout = 100

#Set interrupt mode
intmode = 'Multi-Vector' if ($mvm) else 'Single'

mac.mcp.stall
mac.isr.set Mode $intmode         -l nul
mac.isr.set iacmEnable $autoclear -l nul
mac.isr.set iacsEnable $autoclear -l nul

#Add interrupt handlers
int_lst = [i for i in range($int_count)]
int_mask = 0
for int in $int_lst:
    source_bit = (1 << $int)
    int_mask = $int_mask | $source_bit
    mac.isr.regHandler -v $int -c $int -t 10000000 -n interrupt$int
    interrupt$int = 0

echo [ RUN      ] $testName
#Call direct HW interrupt
mac.isr.reset
mac.isr.enable
mac.llh regInterruptMaskFollowStatusForce1Set $int_mask
mac.llh regInterruptMaskFollowStatusClear1Set $int_mask
mac.llh itrInterruptStatusSetLSW_Set $int_mask

#Wait all handlers
for i = 0; $i < $wait_count; i += 1:
    error = 0
    for int in $int_lst:
        if $(interrupt$int) == 0:
            error = 1
            break
    if $error == 0:
        break

    pause $wait_timeout ms

#Check
if $error > 0:
    echo [  FAILED  ] $testName
    for int in $int_lst:
        if $(interrupt$int) == 0:
            res = failed
        else:
            res = passed
        echo [          ] Interrupt $int is $res
else:
    echo [       OK ] $testName

echo [----------] Global test environment tear-down
#Stop all handlers
mac.isr.disable

#Remove all handlers
for int in $int_lst:
    source_bit = (1 << $int)
    mac.isr.unregHandler --v $int -c $int

echo [==========] 1 tests from 1 test case ran.
if $error > 0:
    echo [  FAILED  ] $testName
else:
    echo [  PASSED  ]
