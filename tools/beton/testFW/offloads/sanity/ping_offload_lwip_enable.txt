
#####################################################
### testFW/offloads/tests/arpOffloadEnable.txt >
#####################################################


flags = 0

remoteIPv4Address = 0x6400FEA9

hostIPv4Address = 0x0101FEA9

Mac0 = 0x1700
Mac1 = 0x00B6
Mac2 = 0x8D00

test_result = 0

echo Test "arpOffload"

#####################################################
### testFW/offloads/lib/offloadCentralState.txt >
#####################################################

patternMaskWindows = 0
patternMaskAquantia = 0
patternMaskOther = 0
offloadsMaskWindows = 0
offloadsMaskAquantia = 0

#####################################################
### testFW/drvIface/getBaseAddress.txt >
#####################################################

BASEADDR = 0;

readreg 0x334 -n BASEADDR -l cli

addr = $BASEADDR

#####################################################
### < testFW/drvIface/getBaseAddress.txt
#####################################################


#####################################################
### testFW/wol/lib/wolConstants.txt >
#####################################################

drvMsgPing = 1
devMsgArp = 2
drvMsgInject = 3
drvMsgWolAdd = 4
drvMsgWolRemove = 5
drvMsgEnableWakeup = 6
drvMsgMsm = 7
drvMsgProvisioning = 8
drvMsgOffloadAdd = 9
drvMsgOffloadRemove = 10

ndisPMWoLPacketBitmapPattern = 0x1
ndisPMWoLPacketMagicPacket = 0x2
ndisPMWoLPacketIPv4TcpSyn = 0x3
ndisPMWoLPacketIPv6TcpSyn = 0x04

ndisPMProtocolOffloadIdIPv4ARP = 0x01
ndisPMProtocolOffloadIdIPv6NS = 0x02

aqPMWoLPacketArp = 0x10001
aqPMWoLReasonIpv4PingPacket = 0x10002
aqPMWoLReasonIpv6PingPacket = 0x10004
aqPMWoLReasonLinkUp = 0x10005
aqPMWoLReasonLinkDown = 0x10006

#####################################################
### < testFW/wol/lib/wolConstants.txt
#####################################################


#####################################################
### testFW/drvIface/drvMsgEnableWakeup.txt >
#####################################################


addr = $BASEADDR

writereg 0x328 $drvMsgEnableWakeup
writereg 0x32c 0x80000000
writereg 0x404 0x2

writereg 0x328 $patternMaskWindows
writereg 0x32c 0x80000004
writereg 0x404 0x2

writereg 0x328 $patternMaskAquantia
writereg 0x32c 0x80000008
writereg 0x404 0x2

writereg 0x328 $patternMaskOther
writereg 0x32c 0x8000000c
writereg 0x404 0x2

writereg 0x328 $offloadsMaskWindows
writereg 0x32c 0x80000010
writereg 0x404 0x2

writereg 0x328 $offloadsMaskAquantia
writereg 0x32c 0x80000014
writereg 0x404 0x2

#####################################################
### < testFW/drvIface/drvMsgEnableWakeup.txt
#####################################################


expectedResponseDwordCount = 1

#####################################################
### testFW/drvIface/helperSendDrvMsg.txt >
#####################################################

transactionResult = 0

addr = $BASEADDR

readreg 0x33c -n id -l cli
id = ($id &0xFFFF) + 1
writereg 0x338 $id -l cli

expectedResponseLen = $expectedResponseDwordCount * 4
for loopNo=0; $loopNo < 100; loopNo += 1:
    readreg 0x33c -n result -l cli
    $result_transaction = ($result & 0xFFFF)
    if $result_transaction == $id:
        break

if $loopNo == 100:
    echo No response from FW
    transactionResult = -1
else:
    if (($result & 0xFFFF0000) >> 16) != $expectedResponseLen:
        echo Unexpected response length
        transactionResult = -1
    else:
        for i = 0; $i < $expectedResponseDwordCount; i += 1:
            mac.mcp.readmem $addr -n errcode -l cli
            if $errcode != 0:
                echo Response $i is not ok: $errcode $result
                transactionResult = -1
            addr = $addr + 4

#####################################################
### < testFW/drvIface/helperSendDrvMsg.txt
#####################################################


for patternId = 1; $patternId < 3; patternId += 1:

    #####################################################
    ### testFW/drvIface/drvMsgOffloadRemove.txt >
    #####################################################


    addr = $BASEADDR

    writereg 0x328 $drvMsgOffloadRemove
    writereg 0x32c 0x80000000
    writereg 0x404 0x2

    writereg 0x328 $patternId
    writereg 0x32c 0x80000004
    writereg 0x404 0x2

    #####################################################
    ### < testFW/drvIface/drvMsgOffloadRemove.txt
    #####################################################

    expectedResponseDwordCount = 1

    #####################################################
    ### testFW/drvIface/helperSendDrvMsgSilent.txt >
    #####################################################

    transactionResult = 0

    addr = $BASEADDR

    readreg 0x33c -n id -l cli
    id = ($id &0xFFFF) + 1
    writereg 0x338 $id -l cli

    expectedResponseLen = $expectedResponseDwordCount * 4
    for loopNo=0; $loopNo < 100; loopNo += 1:
        readreg 0x33c -n result -l cli
        $result_transaction = ($result & 0xFFFF)
        if $result_transaction == $id:
            break

    if $loopNo == 100:
        echo No response from FW
        transactionResult = -1
    else:
        if (($result & 0xFFFF0000) >> 16) != $expectedResponseLen:
            echo Unexpected response length
            transactionResult = -1
        else:
            for i = 0; $i < $expectedResponseDwordCount; i += 1:
                mac.mcp.readmem $addr -n errcode -l cli
                if $errcode != 0:
                    transactionResult = -1
                addr = $addr + 4

    #####################################################
    ### < testFW/drvIface/helperSendDrvMsgSilent.txt
    #####################################################


#####################################################
### < testFW/offloads/lib/offloadCentralState.txt
#####################################################


#####################################################
### testFW/offloads/lib/arpOffloadAdd.txt >
#####################################################


#####################################################
### testFW/wol/lib/wolConstants.txt >
#####################################################

drvMsgPing = 1
devMsgArp = 2
drvMsgInject = 3
drvMsgWolAdd = 4
drvMsgWolRemove = 5
drvMsgEnableWakeup = 6
drvMsgMsm = 7
drvMsgProvisioning = 8
drvMsgOffloadAdd = 9
drvMsgOffloadRemove = 10

ndisPMWoLPacketBitmapPattern = 0x1
ndisPMWoLPacketMagicPacket = 0x2
ndisPMWoLPacketIPv4TcpSyn = 0x3
ndisPMWoLPacketIPv6TcpSyn = 0x04

ndisPMProtocolOffloadIdIPv4ARP = 0x01
ndisPMProtocolOffloadIdIPv6NS = 0x02

aqPMWoLPacketArp = 0x10001
aqPMWoLReasonIpv4PingPacket = 0x10002
aqPMWoLReasonIpv6PingPacket = 0x10004
aqPMWoLReasonLinkUp = 0x10005
aqPMWoLReasonLinkDown = 0x10006

#####################################################
### < testFW/wol/lib/wolConstants.txt
#####################################################


#####################################################
### testFW/drvIface/getBaseAddress.txt >
#####################################################

BASEADDR = 0;

readreg 0x334 -n BASEADDR -l cli

addr = $BASEADDR

#####################################################
### < testFW/drvIface/getBaseAddress.txt
#####################################################


priority                  = 0x10000000
offloadType               = $ndisPMProtocolOffloadIdIPv4ARP
offloadId                 = 1
nextProtocolOffloadOffset = 0

#####################################################
### testFW/drvIface/drvMsgOffloadAdd.txt >
#####################################################


addr = $BASEADDR

writereg 0x328 $drvMsgOffloadAdd
writereg 0x32c 0x80000000
writereg 0x404 0x2

writereg 0x328 $priority
writereg 0x32c 0x80000004
writereg 0x404 0x2

writereg 0x328 $offloadType
writereg 0x32c 0x80000008
writereg 0x404 0x2

writereg 0x328 $offloadId
writereg 0x32c 0x8000000c
writereg 0x404 0x2

writereg 0x328 $nextProtocolOffloadOffset
writereg 0x32c 0x80000010
writereg 0x404 0x2

#####################################################
### < testFW/drvIface/drvMsgOffloadAdd.txt
#####################################################


writereg 0x328 $flags
writereg 0x32c 0x80000014
writereg 0x404 0x2

writereg 0x328 $remoteIPv4Address
writereg 0x32c 0x80000018
writereg 0x404 0x2

writereg 0x328 $hostIPv4Address
writereg 0x32c 0x8000001c
writereg 0x404 0x2

$Mac = $Mac0 | ($Mac1 << 16)
writereg 0x328 $Mac
writereg 0x32c 0x80000020
writereg 0x404 0x2

writereg 0x328 $Mac2
writereg 0x32c 0x80000024
writereg 0x404 0x2

expectedResponseDwordCount = 1

#####################################################
### testFW/drvIface/helperSendDrvMsg.txt >
#####################################################

transactionResult = 0

addr = $BASEADDR

readreg 0x33c -n id -l cli
id = ($id &0xFFFF) + 1
writereg 0x338 $id -l cli

expectedResponseLen = $expectedResponseDwordCount * 4
for loopNo=0; $loopNo < 100; loopNo += 1:
    readreg 0x33c -n result -l cli
    $result_transaction = ($result & 0xFFFF)
    if $result_transaction == $id:
        break

if $loopNo == 100:
    echo No response from FW
    transactionResult = -1
else:
    if (($result & 0xFFFF0000) >> 16) != $expectedResponseLen:
        echo Unexpected response length
        transactionResult = -1
    else:
        for i = 0; $i < $expectedResponseDwordCount; i += 1:
            mac.mcp.readmem $addr -n errcode -l cli
            if $errcode != 0:
                echo Response $i is not ok: $errcode $result
                transactionResult = -1
            addr = $addr + 4

#####################################################
### < testFW/drvIface/helperSendDrvMsg.txt
#####################################################

result = $transactionResult

#####################################################
### < testFW/offloads/lib/arpOffloadAdd.txt
#####################################################

if $result != 0:
    echo arpOffload: Add offload failed
    test_result = -1

#####################################################
### testFW/offloads/lib/offloadEnableAll.txt >
#####################################################

patternMaskWindows = 0
patternMaskAquantia = 0
patternMaskOther = 0
offloadsMaskWindows = (  (1 << (($ndisPMProtocolOffloadIdIPv4ARP & 0xFFFFF) - 0x1)) | (1 << (($ndisPMProtocolOffloadIdIPv6NS  & 0xFFFFF) - 0x1)) )
offloadsMaskAquantia = 0

#####################################################
### testFW/drvIface/drvMsgEnableWakeup.txt >
#####################################################


addr = $BASEADDR

writereg 0x328 $drvMsgEnableWakeup
writereg 0x32c 0x80000000
writereg 0x404 0x2

writereg 0x328 $patternMaskWindows
writereg 0x32c 0x80000004
writereg 0x404 0x2

writereg 0x328 $patternMaskAquantia
writereg 0x32c 0x80000008
writereg 0x404 0x2

writereg 0x328 $patternMaskOther
writereg 0x32c 0x8000000c
writereg 0x404 0x2

writereg 0x328 $offloadsMaskWindows
writereg 0x32c 0x80000010
writereg 0x404 0x2

writereg 0x328 $offloadsMaskAquantia
writereg 0x32c 0x80000014
writereg 0x404 0x2

#####################################################
### < testFW/drvIface/drvMsgEnableWakeup.txt
#####################################################


expectedResponseDwordCount = 1

#####################################################
### testFW/drvIface/helperSendDrvMsg.txt >
#####################################################

transactionResult = 0

addr = $BASEADDR

readreg 0x33c -n id -l cli
id = ($id &0xFFFF) + 1
writereg 0x338 $id -l cli

expectedResponseLen = $expectedResponseDwordCount * 4
for loopNo=0; $loopNo < 100; loopNo += 1:
    readreg 0x33c -n result -l cli
    $result_transaction = ($result & 0xFFFF)
    if $result_transaction == $id:
        break

if $loopNo == 100:
    echo No response from FW
    transactionResult = -1
else:
    if (($result & 0xFFFF0000) >> 16) != $expectedResponseLen:
        echo Unexpected response length
        transactionResult = -1
    else:
        for i = 0; $i < $expectedResponseDwordCount; i += 1:
            mac.mcp.readmem $addr -n errcode -l cli
            if $errcode != 0:
                echo Response $i is not ok: $errcode $result
                transactionResult = -1
            addr = $addr + 4

#####################################################
### < testFW/drvIface/helperSendDrvMsg.txt
#####################################################

$result = $transactionResult

#####################################################
### < testFW/offloads/lib/offloadEnableAll.txt
#####################################################

if $result != 0:
    echo arpOffload: Enable offload failed
    test_result = -1

if $test_result != 0:
    echo _____________FAILED

#####################################################
### < testFW/offloads/tests/arpOffloadEnable.txt
#####################################################
