# $File: //depot/icm/proj/Atlantic/rev1.0/software/Software/Test/AtlanticTestbench/QoS/main.txt $
# $Revision: #3 $
# $DateTime: 2016/04/18 05:46:21 $
# $Author: dmitryb $
#
#Script to determine the sequence of sending packets

hostAlreadyInitiated = False

ifndef logTag:
    logTag = -l cli

tpbsize = 128               # FPGA limitation

maxtc = 8
tpbPerTcSize = ($tpbsize/$maxtc)

mac.txpb[0:$maxtc].set -l nul size $tpbPerTcSize
mac.set txDcbTcCount $maxtc $logTag

ifndef outputFile:
    outputFile = $LOG_PATH/out.txt
ifndef outputFileParsed:
    outputFileParsed = $LOG_PATH/outParsed.txt

ifndef test_num:
    echo !!!DEFAULT PARAMS APPLIED!!!
    basePacketLength = 1300
    packetCount = 950
    targetByteCount=64

ramSize = 0x7800


log.hw disable

#rates = [100, 100, 100, 100]
#i = 0

#for txRingNo in $txRingsArr:
#    curRate = $rates[$i]
#    mac.tps.rs $txRingNo set enable False
#    mac.tps.rs $txRingNo set int $curRate
#    i+=1

if $hostAlreadyInitiated == False:
    mac.set loopback None
    #mac.set loopback System Packet $logTag  #Depp loopback for testing Rx filters
    mac.init
    
    for txRingNo in $txRingsArr:
        mac.txring[$txRingNo].set PacketMark None -l nul
        mac.txring[$txRingNo].set size $txRingSize -l nul
    mac.txinit
    mac.txring[$txRings].enable    # Prepare Tx ring

    mac.isr.disable
    mac.mcp.bootLoadCld $SCRIPT_PATH/atlantic_Ram.cld

#ifdef arbitrationMode:
#    if '$arbitrationMode' != 'RR':
#        i=0
#        for tcNo in $tcArr:
#            curWeight = $weightes[$i]
#            maxCredit = $maxCredits[$i]
#            mac.llh tpsTxPacketSchedulerDescriptorTcMaxCreditSet $maxCredit $tcNo
#            mac.llh tpsTxPacketSchedulerDescriptorTcWeightSet $curWeight $tcNo
#            i+=1

mac.llh regGlobalMicroprocessorScratchPadSet 0x8808 1
mac.llh regGlobalMicroprocessorScratchPadSet 1 0

mac.llh tpsTxPacketSchedulerVmTargetByteCountProfileSet $targetByteCount 0

pause 1 s
for txRingNo in $txRingsArr:
    packetLength = ($basePacketLength & 0xFFFFFFE0 )| $txRingNo
    #echo $packetLength
    for i = 0; $i < $packetCount; i += 1:
        mac.txring[$txRingNo].insert -b $packetLength -p $packetLength -f indexed_uniq_ramp

readMux -s 256 main 0x7700 0x7704 -l nul

mac.llhcache invalidate
for txRingNo in $txRingsArr:
    mac.txring[$txRingNo].commit -c
mac.llhcache flush

pause 3 s

readMux -s 256 main 0x7700 0x7704 -l nul

mac.txring[$txRings].clean
mac.txring[0:32].status $logTag

mac.llh -v baseAddr regGlobalMicroprocessorScratchPadGet 4
baseAddr = ($baseAddr - 0x80000000)

mac.llh -v pCount regTxDmaStatisticsCounter1Get
exec $SCRIPT_PATH/helpers/readSingleValues.txt

outputFileName=$outputFile
byteCountValIndex=0
exec $SCRIPT_PATH/helpers/calcRingNumByByteCount.txt

schedParseLog $outputFile -o $outputFileParsed
echo See output in $outputFileParsed
mac.uninit