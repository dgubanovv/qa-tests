# $File: //depot/icm/proj/Atlantic/rev1.0/software/Software/Test/AtlanticTestbench/Flash/flashErase.txt $
# $Revision: #5 $
# $DateTime: 2016/05/06 20:56:05 $
# $Author: ryanv $
#
# sample auto-test script sample, ready to copy&paste
#
log.hw Disable #disabled to speed up test

flash.init
flash.get jedecid -n FLASH_CONST_JEDECID -l nul
flash.get flashSize -n FLASH_CONST_FLASH_SIZE -l nul
flash.get dataChunkSize -n FLASH_CONST_DATA_CHUNK_SIZE -l nul
flash.get pageSize -n FLASH_CONST_PAGE_SIZE -l nul
flash.get pagesPerSmallestGroup -n FLASH_CONST_PAGES_PER_GROUP -l nul

finalReport = []                               #mandatory clear, empty means tests passed.
flashSizeBytes = $FLASH_CONST_FLASH_SIZE
programCt = ($FLASH_CONST_PAGE_SIZE // $FLASH_CONST_DATA_CHUNK_SIZE)
ok = 1

flash.getPower2Status -n flashPageSizeIsPowerOf2
if not $flashPageSizeIsPowerOf2:
    echo Flash page size is not a power of 2! Setting to power of 2 now...
    flash.setPower2 -n setPower2Successful
    if not $setPower2Successful:
        echo Setting flash page size to power of 2 was not successful. Aborting script...
        finalReport = $finalReport + ['(1) Flash page size was not power of 2 and attempt to force it to power of 2 failed.']
        ok = 0

flash.jedecid -n id
if $id != $FLASH_CONST_JEDECID:
    hex_var = hex($FLASH_CONST_JEDECID)
    finalReport = $finalReport + ['(2) JEDECID not equal to $hex_var']
    ok = 0


for addr = 0; $addr < $flashSizeBytes and $ok == 1; addr+= $FLASH_CONST_PAGE_SIZE: 
    if ($addr % 102400) == 0:
        echo .
    if ($addr % 1024000) == 0:
        echo addr = $addr
    flash.program -a $addr -c $programCt 0x0
    ifndef hideResult:
        echo zero-filling: $addr


for i = 0; $i < $flashSizeBytes and $ok == 1; i+= $FLASH_CONST_PAGE_SIZE:
    if ($i % 102400) == 0:
        echo .
    if ($i % 1024000) == 0:
        echo i = $i
    flash.read -a $i -s $programCt -n data
    for d in $data:
        if $d != 0x00:
            finalReport = $finalReport + ['(3) Zerro fill failed on address $i']
            ok = 0
            break
    ifndef hideResult:
        echo check zeros: $i

if $ok == 1:
    flash.erase -s 0
for i = 0; $i < $flashSizeBytes and $ok == 1; i+= $FLASH_CONST_PAGE_SIZE:
    if ($i % 102400) == 0:
        echo .
    if ($i % 1024000) == 0:
        echo i = $i
    flash.read -a $i -s $programCt -n data
    for d in $data:
        if $d != 0xFFFFFFFF:
            finalReport = $finalReport + ['(4) Erase failed on address $i']
            ok = 0
            break
    ifndef hideResult:
        echo check erase: $i

exec $PWD/helpers/showTestResult.txt
log.hw Enable